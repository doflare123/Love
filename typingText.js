document.addEventListener("DOMContentLoaded", function () {
    var texts = ["–Ø –ª—é–±–ª—é —Ç–µ–±—è, —Å–æ–ª–Ω—ã—à–∫–æ ‚ù§Ô∏è", "–Ø —Ö–æ—á—É —Ç–µ–±–µ —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Ç—ã –ª—É—á—à–µ–µ, —á—Ç–æ —Å–ª—É—á–∞–ª–æ—Å—å —Å–æ –º–Ω–æ–π", "–ï—â–µ –ø–æ–ª–≥–æ–¥–∞ –Ω–∞–∑–∞–¥, —è –∏ –ø–æ–¥—É–º–∞—Ç—å –Ω–µ –º–æ–≥, —á—Ç–æ –±—É–¥—É —Å —Ç–∞–∫–∏–º —á—É–¥–æ–º —Å—Ç—Ä–æ–∏—Ç—å –±—É–¥—É—â–µ–µ", "–•–æ—á—É —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Ç—ã —Å–∞–º–∞—è –ª—É—á—à–∞—è –¥–µ–≤–æ—á–∫–∞ –Ω–∞ —ç—Ç–æ–π –ø–ª–∞–Ω–µ—Ç–µ!", "–ò –≤ —ç—Ç–æ—Ç –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –¥–µ–Ω—å, –≤–º–µ—Å—Ç–æ —Ç—ã—Å—è—á–∏ —Å–ª–æ–≤, —è —Ö–æ—á—É –ø–æ–∂–µ–ª–∞—Ç—å —Ç–µ–±–µ —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–≥–æ –Ω–∞–∏—É–ª—á—à–µ–≥–æ!", "–•–æ—á—É –ø–æ–∂–µ–ª–∞—Ç—å –∑–¥–æ—Ä–æ–≤—å—è, —ç—Ç–æ –≤—Å–µ-—Ç–∞–∫–∏ —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ. –ù–æ –∏ –ø—Ä–æ —Å—á–∞—Å—Ç—å–µ —Ç–æ–∂–µ –Ω–µ–ª—å–∑—è –∑–∞–±—ã–≤–∞—Ç—å!", "–ò–∑–≤–∏–Ω–∏, —á—Ç–æ —è –Ω–µ —Ç–∞–∫–æ–π —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π, —Ö–æ—Ç–µ–ª –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –ª—é–±–æ–≤—å –∫–∞–∫-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ...", "–ò –Ω–∏—á–µ–≥–æ –ª—É—á—à–µ..", "–•–æ—Ç—è –ª—É—á—à–µ –ø—Ä–æ—Å—Ç–æ —Å–∫–∞–∂—É —Ç–µ–±–µ:", "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ç—ã —Å—É—â–µ—Å—Ç–≤—É–µ—à—å –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏", "–Ø —Ç–µ–±—è –ø—Ä–∞–≤–¥–∞ –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ –ª—é–±–ª—é, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è!", "–•–æ—á–µ—Ç—Å—è —Å–µ–π—á–∞—Å –±—ã—Ç—å —Ä—è–¥–æ–º –∏ –∫—Ä–µ–ø–∫–æ-–∫—Ä–µ–ø–∫–æ —Ç–µ–±—è –æ–±–Ω—è—Ç—å, –Ω–æ —É–≤—ã...", "–ü–æ—ç—Ç–æ–º—É —Ö–æ—á—É —Ç–µ–±—è –æ–±–Ω—è—Ç—å —Ö–æ—Ç—è –±—ã –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ ü´Çü´Çü´Çü´Ç", "–¢—ã —É –º–µ–Ω—è —Å–∞–º–∞—è —Å–∞–º–∞—è!"];
    var textContainer = document.getElementById("typing-text");
    var paragraph = textContainer.querySelector("p");
    var textIndex = 0;
    var index = 0;
    var deleting = false;

    function typeEffect() {
        let currentText = texts[textIndex];

        if (!deleting) {
            if (index < currentText.length) {
                paragraph.textContent += currentText.charAt(index);
                textContainer.style.width = `${paragraph.offsetWidth + 20}px`;
                index++;
                setTimeout(typeEffect, 100);
            } else {
                setTimeout(() => {
                    deleting = true;
                    typeEffect();
                }, 2000);
            }
        } else {
            if (index > 0) {
                paragraph.textContent = currentText.substring(0, index - 1);
                textContainer.style.width = `${paragraph.offsetWidth - 20}px`;
                index--;
                setTimeout(typeEffect, 50);
            } else {
                deleting = false;
                textIndex = (textIndex + 1) % texts.length;
                setTimeout(typeEffect, 1000);
            }
        }
        
    }
    setTimeout(typeEffect, 2000);
});
